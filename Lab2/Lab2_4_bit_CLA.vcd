$date
	Mon May 25 23:34:16 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Lab2_4_bit_CLA $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module M1 $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ( Sum [3:0] $end
$var wire 4 ) P [3:0] $end
$var wire 4 * G [3:0] $end
$var wire 1 " Cout $end
$var wire 4 + C [4:1] $end
$scope module M2 $end
$var wire 1 % C0 $end
$var wire 4 , G [3:0] $end
$var wire 4 - P [3:0] $end
$var wire 4 . C [4:1] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1101 .
b1000 -
b101 ,
b1101 +
b101 *
b1000 )
b10 (
b101 '
b1101 &
0%
b101 $
b1101 #
1"
b10 !
$end
#50
b1000 +
b1000 .
b100 )
b100 -
b1000 *
b1000 ,
b101 !
b101 (
1%
b1000 $
b1000 '
b1100 #
b1100 &
#100
1"
b1101 +
b1101 .
b101 *
b101 ,
b1000 )
b1000 -
b10 !
b10 (
0%
b1101 $
b1101 '
b101 #
b101 &
#150
b1000 +
b1000 .
b1000 *
b1000 ,
b100 )
b100 -
b101 !
b101 (
1%
b1100 $
b1100 '
b1000 #
b1000 &
#200
0"
b101 +
b101 .
b0 )
b0 -
b101 *
b101 ,
b1010 !
b1010 (
0%
b101 $
b101 '
b101 #
b101 &
#250
1"
b1011 +
b1011 .
b1011 *
b1011 ,
b111 !
b111 (
1%
b1011 $
b1011 '
b1011 #
b1011 &
#300
b1111 !
b1111 (
b1111 +
b1111 .
b1111 *
b1111 ,
b1111 $
b1111 '
b1111 #
b1111 &
#350
1"
b1111 +
b1111 .
b0 !
b0 (
b0 *
b0 ,
b1111 )
b1111 -
b0 $
b0 '
#400
